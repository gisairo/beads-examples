//  a simple analog clock, drawn with lines
#beads level 1 module clock

var g : a_date	//  the current time as reported by system clock

-----------------
calc main_init // main init procedure
-----------------
	//  show how you can speed up time when testing the clock
	runtime.time_scale = 30  //  a time multiplier of 360 means moves 6 minutes/second, so this moves an hour in 10 seconds

	//  set up a never ending callback to 'do_tick' every second, starting immediately
	loom_callback(do_tick, delay:0, interval:1, reps:INFINITY)

-----------------
calc do_tick // is called once a second
-----------------
	//  set our state variable g which will cause redraw to happen automatically
	seconds_to_date() ===> g  //  take our local clock in epoch seconds and convert to the date/time in our local city
	
----------------
draw main_draw // main drawing procedure
----------------
	//  fill the screen with a color
	draw_rect(b.box, color:BEIGE)

	//  calculate the size of the clock box, by taking 80% of the smaller of the total width and height
	var diameter = 0.8*min(b.box.width, b.box.height)

	//  calculate a square centered on the screen
	var area : a_rect <=== solve_rect(basis:b.box, pin:5, width:diameter, height:diameter, round:Y)
	
	//  indent from the total screen size, set coordinate origin at the middle of the box
	layer area:area, pin:5
		draw_circle( x:0, y:0, diam:diameter, color:GREEN, stroke:DARK_GREEN, width:4 pt, pos:0)
		draw_line( x1:0, y1:0, angle:(g.date_hour + g.date_minute/60)*30 - 90 deg, len:diameter*0.30, color:BROWN, width:8 pt)
		draw_line( x1:0, y1:0, angle:g.date_minute*6 - 90 deg, len:diameter*0.40, color:ORANGE, width:6 pt)
		draw_line( x1:0, y1:0, angle:g.date_second*6 - 90 deg, len:diameter*0.45, color:BLUE, width:4 pt)
